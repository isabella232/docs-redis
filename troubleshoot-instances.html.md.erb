---
title: Troubleshooting Instances
owner: Redis
---

<strong><%= modified_date %></strong>

This topic provides basic instructions for app developers troubleshooting Redis On-Demand for Pivotal Cloud Foundry (PCF).

## <a id="debugging"></a>Debugging Using the CF CLI

To debug using the Cloud Foundry Command Line Interface (cf CLI) tool, see the commands below:

<table>
  <col width="50%">
  <col width="50%">
  <tr>
    <th>To view the...</th>
    <th>Command</th>
  </tr>
  <tr>
    <td>API endpoint, org, and space</td>
    <td><code>cf target</code></td>
  </tr>
  <tr>
    <td>Service offerings available in the targeted org and space</td>
    <td><code>cf marketplace</code></td>
  </tr>
  <tr>
    <td>Apps deployed to the targeted org and space</td>
    <td><code>cf apps</code></td>
  </tr>
  <tr>
    <td>Service instances deployed to the targeted org and space</td>
    <td><code>cf services</code></td>
  </tr>
  <tr>
    <td>GUID for a given service instance</td>
    <td><code>cf service SERVICE-INSTANCE --guid</code></td>
  </tr>
  <tr>
    <td>Service instance or application logs</td>
    <td><code>cf tail SERVICE-INSTANCE/APP</code></td>
  </tr>
</table>
<br>

## <a id="outages"></a>Temporary Outages

Redis for PCF service instances can become temporarily inaccessible during upgrades and VM or network failures.

## <a id="errors"></a> Errors

You may see an error when using the Cloud Foundry Command-Line Interface (cf CLI) to perform basic operations on a Redis for PCF service instance:

* `cf create`
* `cf update`
* `cf bind`
* `cf unbind`
* `cf delete`

### <a id="parse-error"></a>Parse a Cloud Foundry (CF) Error Message

<p>
  Failed operations (create, update, bind, unbind, delete) result in an error message.
  You can retrieve the error message later by running the cf CLI command <code>cf service INSTANCE-NAME</code>.
</p>

<pre class="terminal">
$ cf service myservice

Service instance: myservice
Service: super-db
Bound apps:
Tags:
Plan: dedicated-vm
Description: Dedicated Instance
Documentation url:
Dashboard:

Last Operation
Status: create failed
Message: Instance provisioning failed: There was a problem completing your request.
     Please contact your operations team providing the following information:
     service: redis-acceptance,
     service-instance-guid: ae9e232c-0bd5-4684-af27-1b08b0c70089,
     broker-request-id: 63da3a35-24aa-4183-aec6-db8294506bac,
     task-id: 442,
     operation: create
Started: 2017-03-13T10:16:55Z
Updated: 2017-03-13T10:17:58Z
</pre>

<p>
  Use the information in the <code>Message</code> field to debug further.
  Provide this information to Pivotal Support when filing a ticket.
</p>

<p>
  The <code>task-id</code> field maps to the BOSH task ID.
  For more information on a failed BOSH task, use the <code>bosh task TASK-ID</code>.
</p>

<p>
  The <code>broker-request-guid</code> maps to the portion of the On-Demand Broker log
  containing the failed step.
  Access the broker log through your syslog aggregator, or access BOSH logs for
  the broker by typing <code>bosh logs broker 0</code>.
  If you have more than one broker instance, repeat this process for each instance.
</p>


### <a id="instance"></a> Retrieve Service Instance Information

1. Log into the space containing the instance or failed instance.
    <pre class="terminal">
    $ cf login
    </pre>

1. If you do not know the name of the service instance, run `cf services` to see a listing of all service instances in the space. The service instances are listed in the `name` column.
    <pre class="terminal">
    $ cf services
    Getting services in org my-org / space my-space as user<span>@</span>example.com...
    OK
    name          service      plan           bound apps    last operation
    my-instance   p.redis      cache-small                  create succeeded
    </pre>

1. Run `cf service SERVICE-INSTANCE-NAME` to retrieve more information about a specific instance.

1. Run `cf service SERVICE-INSTANCE-NAME --guid` to retrieve the GUID of the
instance, which is useful for debugging.

1. **Redis for PCF v1.14 and later:** Run `cf tail SERVICE-INSTANCE-NAME/APP-NAME` to retrieve the service instance of
the app logs if the Log Cache CLI plugin is enabled.
See <a href="using.html#logging">Log Cache CLI plugin</a>.

### <a id="instance-credentials"></a> Retrieve the Password for a Redis Service Instance

If you want to access the Redis server for troubleshooting,
you can find a Redis service instance password by creating a new service key.

<p class="note"><strong>Note:</strong> Pivotal recommends that you use this key for troubleshooting only, and that you
delete the key after troubleshooting by using the command <code>cf delete-service-key SERVICE-INSTANCE KEY-NAME</code>.</p>

For instructions on how to retrieve the password, see [Retrieve the Password for a Redis Service Instance](./using.html#call).

### <a id='credential-setting-failure'></a>Error: Failed to Set Credentials in Credential Store

<p>
  If you encounter:
</p>

<pre class="terminal">
error: failed to set credentials in credential store:
The request includes an unrecognized parameter 'mode'.
Please update or remove this parameter and retry your request.
</pre>

<p>
  after upgrading from PCF 2.3 to 2.4, it is likely because one or more installed on-demand brokers
  were not restarted during the upgrade. To clear the cached server version and enable
  your on-demand brokers to communicate with CredHub v2, do the procedure in
  <a href="https://docs.pivotal.io/pivotalcf/2-4/customizing/upgrading-pcf.html#bosh-restart">Run BOSH Restart on Your On-Demand Service Brokers</a>.
</p>


## <a id="redis-client-errors"></a>Error Messages from the Redis Client

Certain errors are returned to the Redis client instead of being recorded in the logs.
The Redis protocol represents errors as simple strings beginning with a `-` character. <br><br>

This section helps to troubleshoot the following errors:
<br><br>
<ul>
  <li><a href="#max-clients">Maximum Number of Clients Reached</a></li>
  <li><a href="#maxmemory">Maxmemory Limit Reached</a></li>
  <li><a href="#err">Error When Running the Save Command</a></li>
</ul>

### <a id="max-clients"></a> Maximum Number of Clients Reached

<strong>Symptom</strong><br>

You receive the following error:<br>

<pre class="terminal">-ERR max number of clients reached</pre>
<br>

<strong>Explanation</strong><br>

This is usually caused by apps opening multiple client connections to Redis.
<br><br>

<strong>Solution</strong><br>

Share or pool Redis connections within an app.
Redis for PCF configures Redis to accept 10000 client connections.
This can be confirmed by running the <code>INFO</code> command using the Redis CLI.


### <a id="maxmemory"></a> Maxmemory Limit Reached

<strong>Symptom</strong><br>

You receive the following error:<br>

<pre class="terminal">-OOM command not allowed when used memory > 'maxmemory'.</pre>
<br>

<strong>Explanation</strong><br>

This occurs when the Redis server has reached its <code>maxmemory</code> limit.
<br><br>

<strong>Solution</strong><br>

Consider changing your maxmemory-policy.
You can update this using the <code>cf update-service</code> parameters.
For how to do this, see <a href="using.html#custom">Customize an On-Demand Service Instance</a>.


### <a id="err"></a>Error When Running the Save Command

<strong>Symptom</strong><br>

You receive the following error message when running <code>redis-cli SAVE</code>
or issuing the save command using another Redis client:

<pre class="terminal">-ERR</pre>
<br>

<strong>Explanation</strong><br>

This might occur when the Redis server's disk is full.
<br><br>

<strong>Solution</strong><br>

A more informative message might be logged in the syslog.
For more information, see <a href="./troubleshooting.html#syslog-errors">Syslog Errors</a>.


### <a id="err"></a>Unknown Command Error

<strong>Symptom</strong><br>

You receive the following error message when running <code>redis-cli COMMAND</code>
or issuing a command using another Redis client:

<pre class="terminal">-ERR unknown command</pre>
<br>

<strong>Explanation</strong><br>

For security reasons, certain commands such as `CONFIG`, `SAVE`, and `BGSAVE` are not available by default.
<br><br>

<strong>Solution</strong><br>

Talk to your operator about the availability of the command.

## <a id="kb"></a>Knowledge Base (Community)

<p>
  Find the answer to your question and browse product discussions and solutions by
  searching the <a href="https://community.pivotal.io/s/">Pivotal Knowledge Base</a>.
</p>


## <a id="support"></a>File a Support Ticket

<p>
  You can file a support ticket <a href="https://support.pivotal.io/">here</a>.
  Be sure to provide the error message from <code>cf service YOUR-SERVICE-INSTANCE</code>.
</p>

<p>
  To expedite troubleshooting, if possible, provide your service broker logs,
  service instance logs, and BOSH task output.
  Your cloud operator should be able to obtain these from your error message.
</p>
