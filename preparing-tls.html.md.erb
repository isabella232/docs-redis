---
title: Preparing for TLS
owner: Redis for PCF
---

<strong><%= modified_date %></strong>

This topic provides an overview of how to prepare for using Transport Layer Security (TLS)
with the Redis on-demand service to secure communication between apps and service instances.
The topic also includes the procedure for providing an existing CA certificate to BOSH CredHub,
or generating a new CA certificate with BOSH CredHub.

<p class="note">
  <strong>Note</strong>: To enable TLS for Redis for PCF,
	you must perform the procedures in
  <a href="#provide-generate-pcf">Provide or Generate a CA Certificate</a>
  below <strong>before</strong> installing and configuring the tile.
  This certificate is shared by multiple tiles.
  If you have already performed this procedure you do not need to repeat it.
  If you want to change this certificate, see [Rotating Certificates](https://docs.pivotal.io/pivotalcf/security/pcf-infrastructure/api-cert-rotation.html).
</p>


##<a id='overview'></a> Overview

Enabling TLS co-locates a second TLS-enabled port on Redis for PCF service instances.
Applications and clients can use this port to establish encrypted connections with the data service.
The certificate used in this connection is a **server certificate** generated by **CredHub**,
a component designed for centralized credential management in PCF, co-located on the BOSH Director.

CredHub generates the server certificate with a **Certificate Authority (CA)**.
The operator can provide a certificate to CredHub or have CredHub generate a new certificate.

Apps and clients that communicate with the Redis for PCF server must have access
to the public component of the CA certificate in order to use the certificate
and to validate that the server certificate can be trusted.

PCF distributes the public component of the CA certificate by provisioning a copy
of the CA certificate in the trusted store of each container's operating system.
Apps written in Java and Spring, or C# and Steeltoe, automatically discover the
CA certificate in the trusted store.

##<a id='workflow'></a> Workflow for Enabling and Using TLS

The following workflow is required to enable TLS and to allow developers to use it with their apps:

<ol>
<li>An operator provides a CA certificate to CredHub by completing the procedures
    in <a href="#provide-generate-pcf">Provide or Generate a CA Certificate</a> below.</li>
<li>An operator enables TLS Optional in the tile configuration while installing Redis for PCF.
    See <a href="installing.html#on-demand-config">On-Demand Service Settings</a>.</li>
<li>An app developer modifies their app to communicate securely with the Redis server.
    See <a href="./appdevs.html#using-tls">Using TLS</a>
</li>
</ol>

<p class="note"><strong>Note</strong>: An operator must also rotate the CA certificate if it expires or if it becomes compromised.
For information about how to rotate your CA certificate, see [Rotating Certificates](https://docs.pivotal.io/pivotalcf/security/pcf-infrastructure/api-cert-rotation.html).</p>

##<a id="provide-generate-pcf"></a> Provide or Generate a CA Certificate

To enable and use TLS, you must complete the procedures below before installing and configuring the tile.

<p class="note warning"><strong>Warning:</strong> This procedure requires restarting
all of the VMs in your PCF deployment in order to apply a CA certificate.
This operation can take a long time to complete.</p>


###<a id='uaa'></a> Create a UAA Client

Follow these steps to create a UAA client for CredHub on your UAA server:

1. Retrieve the IP address of the BOSH Director VM and the Director credentials by completing the steps
   in [Gather Credential and IP Address Information](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#gather).<br><br>
   Both the UAA and CredHub servers are co-located on the BOSH Director VM.

1. SSH into the Ops Manager VM by completing the steps in [SSH into Ops Manager VM](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh).

1. From the Ops Manager VM, use the UAA Command Line Interface (UAAC) to target the UAA server on the BOSH Director VM.
    In the UAAC command, specify the IP address for the BOSH Director VM and port 8443.
    <br><br>
    Run the following command:

    ```
    uaac target BOSH-DIRECTOR:8443
    ```
    <br>
    Where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM.
    You retrieved this address as part of the procedures in Step 1.
    <br><br>
    For example:
    <pre class="terminal">
    $ uaac target 10.0.0.5:8443
    </pre>

4. In the **Credentials** tab of the BOSH Director tile,
   retrieve and record the `identity` and `password` values for the following:
    + **Uaa Login Client Credentials**
    + **Uaa Admin User Credentials**

    <p class="note"><strong>Note</strong>: These are the credentials for the UAA server co-located on the BOSH Director,
     not the UAA server co-located on Pivotal Application Service.</p>

1. From the Ops Manager VM, use the UAAC to get a token.
    <br><br>
    Run the following command:

    ```
    uaac token owner get login --secret=UAA-LOGIN-CLIENT-CRED
    ```
    <br>
    Where `UAA-LOGIN-CLIENT-CRED` is the `password` value of the **Uaa Login Client Credentials**
    that you retrieved in Step 4 above.
    <br><br>
    For example:
    <pre class="terminal">
    $ uaac token owner get \
        login --secret=abcdefghijklm123456789
    </pre>

1. When prompted for a username and password, enter the values for `identity` and `password` of the
**Uaa Admin User Credentials** you retrieved in step 5 above. <br><br>
    For example:
    <pre class="terminal">
    User name:  admin
    Password:  ********************************
    </pre>

1. Add a UAA client for CredHub with the correct grants.
    <br><br>
    Run the following command:

    ```
    uaac client add \
      --authorized_grant_types client_credentials \
      --authorities credhub.read,credhub.write
    ```

1. When prompted for Client ID, enter `credhub`.
   When prompted for `New client secret`, enter a secure password of your choice.
    <br><br>
    For example:
    <pre class="terminal">
    Client ID:  credhub
    New client secret:  *******
    Verify new client secret:  *******
      scope: uaa.none
      client\_id: credhub
      resource\_ids: none
      authorized\_grant\_types: client\_credentials
      autoapprove:
      authorities: credhub.write credhub.read
      name: credhub
      required_user_groups:
      lastmodified: 1518198701452
      id: credhub
      created_by: f609e861-39ec-4a16-8aee-cba9e9b079e3
    </pre>

###<a id='add-ca-cert'></a> Add the CA Certificate

Follow these steps to log in to CredHub, provide or generate a CA certificate, and add the certificate to Ops Manager:

1. From the Ops Manager VM, set the API target of the CredHub CLI to your CredHub server.
    <br><br>
    Run the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    ```
    <br>
    Where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub api http<span>s:</span>//10.0.0.5:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    </pre>

1. Log in to CredHub.
    <br><br>
    Run the following command:

    ```
    credhub login --client-name=credhub --client-secret=CLIENT-SECRET
    ```
    <br>
    Where `CLIENT-SECRET` is the `New client secret` you set in step 8 in the procedure above.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub login \
    	--client-name=credhub \
    	--client-secret=abcdefghijklm123456789
    </pre>

1. Use the CredHub CLI to check whether a services CA certificate already is present.
    <br><br>
    Run the following command:

    ```
    credhub get --name="/services/tls_ca"
    ```
    <br>
    If you already have a certificate at the `services/tls_ca` path, skip step 4.

1. Use the CredHub CLI to generate a CA certificate or provide an existing one.
    <p class="note"><strong>Note</strong>: Your PCF deployment can have multiple CA certificates.
       Pivotal recommends a dedicated CA certificate for services.</p>
	* If you do not have a CA certificate, use the CredHub CLI to generate one.
    <br><br>
    Run the following command:

        ```
        credhub generate \
          --name="/services/tls_ca" \
          --type="certificate" \
          --no-overwrite \
          --is-ca \
          --common-name="rootCA"
        ```
    * If you have an existing CA certificate that you want to use,
      create a new file called `root.pem` with the contents of the certificate.
      Then run the following command, specifying the path to `root.pem`
      and the private key for the certificate.<br><br>
      For example:
        <pre class="terminal">
        $ credhub set \
            --name="/services/tls_ca" \
            --type="certificate" \
            --certificate=./root.pem \
            --private=ERKSOSMFF...
        </pre>

1. Use the BOSH CLI v2 to extract the `certificate` portion from the CA certificate and print it.
    <br><br>
    Run the following command:
    ```
    bosh int <(credhub get \
      --name=/services/tls_ca) \
      --path /value/certificate
    ```

1. Copy the output.

1. Navigate to the Ops Manager **Installation Dashboard** and select the BOSH Director tile.
Click **Security**.

1. Paste the contents of the CA certificate into **Trusted Certificates**, and then click **Save**.

1. Ensure relevant Application Security Groups are open for port 16379. This can be done through the cf cli.
For more information, see [Managing ASGs with the cf CLI](https://docs.pivotal.io/pivotalcf/2-6/concepts/asg.html#procedures).

1. After preparing your environment for TLS, you must enable TLS in the tile configuration,
   following the appropriate step below.

<p class="note warning"><strong>Warning:</strong>:
  Restarting all of the VMs in your PCF deployment to apply a
  CA certificate takes a long time to complete.
</p>

    * **For an Existing Installation**: Complete the steps in
    [Upgrade to Redis for PCF v2.2](upgrade.html#upgrades) to enable TLS in the tile,
    click **Review Pending Changes**, and then click **Apply Changes** in the Installation Dashboard.
    This restarts all the VMs in your PCF deployment and applies your CA certificate.
    <p class="note"><strong>Note:</strong>
    Make sure the <code>upgrade-all-service-instances</code> errand is set to <strong>On</strong>.
    This errand must be run to ensure all service instances have the needed changes. </p>

    * **For a New Installation**: Complete the procedures in
    [On-Demand Service Settings](installing.html#on-demand-config),
    including enabling TLS in the **On-Demand Service Settings** tab,
    click **Review Pending Changes**, and then click **Apply Changes**
    in the Installation Dashboard.
    This deploys Redis for PCF, restarts all the VMs in your PCF deployment,
    and applies your CA certificate.

1. After enabling TLS Optional, application developers must modify their applications to communicate over TLS. See [Using TLS](appdevs.html#using-tls).
