---
title: Preparing for TLS
owner: Redis for PCF
---

<strong><%= modified_date %></strong>

This topic provides an overview of how to prepare for using Transport Layer Security (TLS)
with the Redis on-demand service to secure communication between apps and service instances.<br>

This topic also includes procedures for providing an existing CA certificate to BOSH CredHub and
generating a new CA certificate with BOSH CredHub.

<p class="note warning">
  <strong>Warning:</strong> To enable TLS for Redis for PCF,
	you must perform the procedures in
  <a href="#provide-generate-pcf">Provide or Generate a CA Certificate</a>
  below <strong>before</strong> installing and configuring the tile.<br><br>
  This certificate is shared by multiple tiles.
  If you have already performed this procedure, you do not need to repeat it.
  To change this certificate, follow the steps in
  <a href="https://docs.pivotal.io/pivotalcf/security/pcf-infrastructure/api-cert-rotation.html">Rotating Certificates</a>.
</p>


##<a id='overview'></a> Overview

Enabling TLS co-locates a second TLS-enabled port on Redis for PCF service instances.
Apps and clients can use this port to establish encrypted connections with the data service.
The certificate used in this connection is a server certificate generated by CredHub.<br>

CredHub is a component designed for centralized credential management in PCF and is co-located on the BOSH
Director. CredHub generates the server certificate with a Certificate Authority (CA).
The operator can provide a certificate to CredHub or have CredHub generate a new certificate.

Apps and clients that communicate with the Redis for PCF server must have access
to the public component of the CA certificate to use the certificate and check that it is trustworthy.

PCF distributes the public component of the CA certificate by provisioning a copy
of the CA certificate in the trusted store of each container's operating system.
Apps written in Java and Spring, or C# and Steeltoe, automatically discover the
CA certificate in the trusted store.

##<a id='workflow'></a> Workflow for Enabling and Using TLS

The following workflow is required to enable TLS and to allow developers to use it with their apps:

<ol>
  <li>An operator provides a CA certificate to CredHub by completing the procedures in
    <a href="#provide-generate-pcf">Provide or Generate a CA Certificate</a> below.</li>
  <li>An operator enables <strong>TLS Optional</strong> in the tile configuration while installing Redis for
    PCF. For more information, see <a href="installing.html#on-demand-config">On-Demand Service Settings</a>.</li>
  <li>An app developer modifies their app to communicate securely with the Redis server. For more
    information, see <a href="./appdevs.html#using-tls">Using TLS</a>.</li>
  <li>An operator rotates the CA certificate when it expires or becomes compromised. For more information,
    see <a href="https://docs.pivotal.io/pivotalcf/security/pcf-infrastructure/api-cert-rotation.html">Rotating Certificates</a>.</li>
</ol>

##<a id="provide-generate-pcf"></a> Provide or Generate a CA Certificate

To enable and use TLS, you must complete the procedures below before installing and configuring the tile.

<p class="note warning"><strong>Warning:</strong> This procedure requires restarting
all of the VMs in your PCF deployment in order to apply a CA certificate.
This operation can take a long time to complete.
</p>

###<a id='uaa'></a> Create a UAA Client

Follow these steps to create a UAA client for CredHub on your UAA server:

1. Retrieve the IP address of the BOSH Director VM and the Director credentials by completing the steps
   in [Gather Credential and IP Address Information](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#gather).<br>
   Both the UAA and CredHub servers are co-located on the BOSH Director VM.

1. SSH into the Ops Manager VM by following the steps in [SSH into Ops Manager VM](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#ssh).

1. From the Ops Manager VM, target the UAA server on the BOSH Director VM by running the following command in the UAA Command Line Interface (UAAC):

    ```
    uaac target BOSH-DIRECTOR-IP:8443
    ```

    Where `BOSH-DIRECTOR-IP` is the IP address of the BOSH Director VM and `8443` is the port to use.
    You retrieved the BOSH Director IP address in step 1.<br><br>

    For example:
    <pre class="terminal">
    $ uaac target 10.0.0.5:8443
    </pre>


1. In the **Credentials** tab of the BOSH Director tile,
   retrieve and record the `identity` and `password` values for the following:
    * UAA Login Client Credentials
    * UAA Admin User Credentials

    <p class="note"><strong>Note:</strong> These are the credentials for the UAA server that is co-located on the BOSH Director, not the UAA server that is co-located on Pivotal Application Service (PAS).</p>

1. From the Ops Manager VM, use the UAAC to get a token by running the following command:

    ```
    uaac token owner get login --secret=UAA-LOGIN-CLIENT-CRED
    ```

    Where `UAA-LOGIN-CLIENT-CRED` is the `password` value of the UAA login client credentials
    that you retrieved in the previous step.<br><br>

    For example:
    <pre class="terminal">
    $ uaac token owner get \
        login --secret=abcdefghijklm123456789
    </pre>

1. When prompted for a username and password, enter the values for `identity` and `password` of the
UAA Admin User Credentials that you retrieved in the previous step.<br><br>
    For example:
    <pre class="terminal">
    User name:  admin
    Password:  ********************************
    </pre>

1. Add a UAA client for CredHub with the correct grants by running the following command:

    ```
    uaac client add \
      --authorized_grant_types client_credentials \
      --authorities credhub.read,credhub.write
    ```

1. When prompted for a client ID, enter `credhub`.
1. When prompted for a new client secret, enter a secure password of your choice.
    <br><br>
    For example:
    <pre class="terminal">
    Client ID:  credhub
    New client secret:  *******
    Verify new client secret:  *******
      scope: uaa.none
      client\_id: credhub
      resource\_ids: none
      authorized\_grant\_types: client\_credentials
      autoapprove:
      authorities: credhub.write credhub.read
      name: credhub
      required\_user\_groups:
      lastmodified: 1518198701452
      id: credhub
      created_by: f609e861-39ec-4a16-8aee-cba9e9b079e3
    </pre>

###<a id='add-ca-cert'></a> Add the CA Certificate

Follow the steps below to log in to CredHub, provide or generate a CA certificate, and add the certificate to Ops Manager.

1. From the Ops Manager VM, set the API target of the CredHub CLI as your CredHub server by running the following command:

    ```
    credhub api https://BOSH-DIRECTOR:8844 --ca-cert=/var/tempest/workspaces/default/root_ca_certificate
    ```

    Where `BOSH-DIRECTOR` is the IP address of the BOSH Director VM.
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub api http<span>s:</span>//10.0.0.5:8844 --ca-cert=/var/tempest/workspaces/default/root\_ca\_certificate
    </pre>

1. Log in to CredHub by running the following command:

    ```
    credhub login --client-name=credhub --client-secret=CLIENT-SECRET
    ```

    Where `CLIENT-SECRET` is the new client secret you created earlier in [Create a UAA Client](#uaa).
    <br><br>
    For example:
    <pre class="terminal">
    $ credhub login \
    	--client-name=credhub \
    	--client-secret=abcdefghijklm123456789
    </pre>

1. Check whether a services CA certificate already exists by running the following command in the CredHub CLI:

    ```
    credhub get --name="/services/tls_ca"
    ```
    <br>
    If you already have a certificate at the `services/tls_ca` path, skip the following step.

1. Use the CredHub CLI to generate a CA certificate or provide an existing one.
    <p class="note"><strong>Note</strong>: Your PCF deployment can have multiple CA certificates.
       Pivotal recommends a dedicated CA certificate for services.</p>
	* If you do not have a CA certificate, use the CredHub CLI to generate one by running the following command:

        ```
        credhub generate \
          --name="/services/tls_ca" \
          --type="certificate" \
          --no-overwrite \
          --is-ca \
          --common-name="rootCA"
        ```
    * If you have a CA certificate that you want to use, create a new file called `root.pem` with the contents of the certificate. Then run the following command, specifying the path to `root.pem`
      and the private key for the certificate.<br><br>
      For example:
        <pre class="terminal">
        $ credhub set \
            --name="/services/tls_ca" \
            --type="certificate" \
            --certificate=./root.pem \
            --private=ERKSOSMFF...
        </pre>

1. Extract the `certificate` portion from the CA certificate and print it by running the following command in BOSH CLI v2:

    ```
    bosh int <(credhub get \
      --name=/services/tls_ca) \
      --path /value/certificate
    ```

1. Copy the output.

1. Navigate to the Ops Manager **Installation Dashboard** and select the BOSH Director tile.

1. Click **Security**.

1. Paste the contents of the CA certificate into **Trusted Certificates** and then click **Save**.

1. Ensure relevant application security groups are open for port 16379. This can be done through the cf CLI.
For more information, see [Managing ASGs with the cf CLI](https://docs.pivotal.io/pivotalcf/2-6/concepts/asg.html#procedures).

1. After preparing your environment for TLS, enable TLS in the tile configuration by
   following the appropriate step below.

    <p class="note warning"><strong>Warning:</strong>
      Restarting all of the VMs in your PCF deployment to apply a
      CA certificate takes a long time to complete.
    </p>

    <ul>
      <li><strong>For an existing installation:</strong></li>
        <ul>
          <li>Complete the steps in <a href="upgrade.html#upgrades">Upgrade to Redis for PCF v2.2</a> to enable TLS in the tile.</li>
          <li>Click <strong>Review Pending Changes</strong>.</li>
          <li>Ensure the <code>upgrade-all-service-instances</code> errand is set to <strong>On</strong>.</li>
          <li>Click <strong>Apply Changes</strong> in the Installation Dashboard. This restarts all the VMs in your PCF deployment and applies your CA certificate. This causes downtime to all on-demand service instances.</li>
        </ul>
      <li><strong>For a new installation:</strong></li>
        <ul>
          <li>Complete the procedures in <a href="installing.html#on-demand-config">On-Demand Service Settings</a>, including enabling TLS in the <strong>On-Demand Service Settings</strong> tab.</li>
          <li>Click <strong>Review Pending Changes</strong>.</li>
          <li>Click <strong>Apply Changes</strong> in the Installation Dashboard. This deploys Redis for PCF, restarts all the VMs in your PCF deployment, and applies your CA certificate.</li>
        </ul>
    </ul>

1. After enabling **TLS Optional**, app developers must modify their applications to communicate over TLS.
For more information, see [Using TLS](appdevs.html#using-tls).
