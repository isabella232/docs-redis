To access metrics for <%= service_name %> service instances, you can use Loggregator's Log
Cache feature with the Log Cache CLI plugin.
Log Cache is enabled by default in  <%= vars.app_runtime_full %> v2.2 and later.

<p class='note'>
  <strong>Note:</strong> To use this feature the <strong>V2 Firehose</strong> must be enabled
  and <strong>Enable Log Cache syslog ingestion</strong> must be disabled in the PAS tile.
  For more information about configuring these checkboxes, see
  <a href="https://docs.pivotal.io/platform/application-service/operating/logging-config-opsman.html#syslog-forward">Enable Syslog Forwarding</a>.
</p>

To access metrics for on-demand service instances, do the following:

1. To install the cf CLI plugin, run the following command:

    ```
    cf install-plugin -r CF-Community "log-cache"
    ```

1. To access metrics for a service instance, run the following command:

<% if service_name.include?("MySQL") %>
    ```
    cf tail SERVICE-INSTANCE-NAME
    ```
    Two useful flags to append to this command are:
      - `-f`, `--follow`: Append metrics logs to stdout as they are generated, rather than returning a fixed number of metrics or metrics over a fixed interval.
      - `--json`: Output metrics logs as envelopes in JSON format.
      For a complete list of `cf tail` options, see the [Log Cache CLI repository](https://github.com/cloudfoundry/log-cache-cli#usage).

<% elsif service_name.include?("Redis") %>
    ```
    cf tail SERVICE-INSTANCE-NAME
    ```
<% elsif service_name.include?("RabbitMQ") %>
    ```
    cf tail SERVICE-INSTANCE-NAME
    ```
<% end %>
    Where `SERVICE-INSTANCE-NAME` is the name of your service instance.
    <br><br>
  For example:

    <pre class="terminal">
    <%# Switch output for different services %>
<% if service_name.include?("MySQL") %>
     $ cf tail -f my-instance | egrep 'connected|available|persistent_disk_used_percent'
     2019-05-17T11:25:59.48-0700 [my-instance] GAUGE /p.mysql/available:1.000000 boolean
     2019-05-17T11:26:29.49-0700 [my-instance] GAUGE /p.mysql/system/persistent_disk_used_percent:17.000000 percentage
     2019-05-17T11:26:29.49-0700 [my-instance] GAUGE /p.mysql/performance/threads_connected:**6**.000000 connection
     2019-05-17T11:26:59.50-0700 [my-instance] GAUGE /p.mysql/available:1.000000 boolean
     2019-05-17T11:27:29.50-0700 [my-instance] GAUGE /p.mysql/system/persistent_disk_used_percent:17.000000 percentage
     2019-05-17T11:27:29.50-0700 [my-instance] GAUGE /p.mysql/performance/threads_connected:**7**.000000 connection
<% elsif service_name.include?("Redis") %>
     $ cf tail my-instance
     Retrieving logs for service my-instance in org system / space pivotal-services as admin...
     2018-07-03T09:54:14.84+0100 [my-instance] GAUGE info.clients.blocked_clients:0.000000 metric info.clients.client_biggest_input_buf:0.000000 metric ...
<% elsif service_name.include?("RabbitMQ") %>
     $ cf tail my-instance
     Retrieving logs for service my-instance in org system / space pivotal-services as admin...
     2018-12-06T11:01:06.03+0000 [my-instance] GAUGE /p.rabbitmq/rabbitmq/channels/count:0.000000 count /p.rabbitmq/rabbitmq/connections/count:0.000000...
<% end %>
    </pre>
  For more information about the metrics output, see
<%# Switch links for different services %>
<% if service_name.include?("MySQL") %>
  the [Key Performance Indicators](#kpi) and [Component Metrics](#component-metrics) sections below.
<% elsif service_name.include?("Redis") %>
[Redis KPIs](./monitoring.html#Redis-KPIs).
<% elsif service_name.include?("RabbitMQ") %>
[Monitoring and KPIs for On-Demand RabbitMQ for <%= platform_name %>](./monitor.html).
<% end %>

For more information about how to enable Log Cache and about the `cf tail` command,
see [Enable Log Cache](https://docs.pivotal.io/pivotalcf/opsguide/logging-config-opsman.html#log-cache).
